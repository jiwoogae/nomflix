{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Store.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loading","Loader","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","searchTerm","tvResults","handelSumbit","update","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","loading","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Store","createContext","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Production","ProductionName","Select","Company","button","Videos","Genres","DetailPresenter","Consumer","store","result","original_title","original_name","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","onClick","e","changeValue","console","log","production_companies","names","logo_path","DetailContainer","includes","match","parsedId","parseInt","isNaN","push","history","Provider","path","exact","component","Home","Tv","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.960a7a67.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 10px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding-top: 70px;\n`;\n\nconst Loading = styled.span`\n  font-size: 33px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <Loading>Now Loading...</Loading>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst noImageUrl =\n  \"https://lh3.googleusercontent.com/proxy/1zCyKrXeD7NyMPRMO-ANxsT8KAZhU2SsajyYOIt4qzki95Cic1-etd9QCz4QOA10_3he9ett-WgYnHJlqkN8SKL8ny5PC17AZxQ0wOKVRVUs2yvTivU\";\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w500${imageUrl}` : noImageUrl\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 10 ? `${title.substring(0, 10)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, Loading }) => (\n  <>\n    <Helmet>\n      <title>Home | nomflix</title>\n    </Helmet>\n    {Loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Up coming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error ? <Message text={error} color=\"white\" /> : null}\n      </Container>\n    )}{\" \"}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  Loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"625d92ebd6af7f56d466686d07932025\",\n    language: \"ko\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    Loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Cant Fint Movies infomations\"\n      });\n    } finally {\n      this.setState({\n        Loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, Loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        Loading={Loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, Loading }) => (\n  <>\n    <Helmet>\n      <title>TV | nomflix</title>\n    </Helmet>\n    {Loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top rated\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {error ? <Message text={error} color=\"white\" /> : null}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  Loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    Loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Cant Fint Movies infomations\"\n      });\n    } finally {\n      this.setState({\n        Loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, Loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        Loading={Loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  searchTerm,\n  tvResults,\n  error,\n  Loading,\n  handelSumbit,\n  update\n}) => (\n  <>\n    <Helmet>\n      <title>Search | nomflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handelSumbit}>\n          <Input\n            placeholder=\"Search Movies or Tv shows ...\"\n            value={searchTerm}\n            onChange={update}\n          />\n        </Form>\n        {Loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.title}\n                    rating={movie.vote_average}\n                    year={movie.release_date}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.name}\n                    rating={show.vote_average}\n                    year={show.first_air_date}\n                  />\n                ))}\n              </Section>\n            )}\n          </>\n        )}\n        {error ? <Message text={error} color=\"white\" /> : null}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message text={\"Cant find anything\"} color=\"#95a5a6\" />\n          )}\n      </Container>\n    }\n  </>\n);\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  popular: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  Loading: PropTypes.bool.isRequired,\n  handelSumbit: PropTypes.func.isRequired,\n  update: PropTypes.func\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    Loading: false\n  };\n\n  handelSumbit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  update = (event) => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch (error) {\n      this.setState({\n        error: `Cant find result in ${searchTerm}`\n      });\n    } finally {\n      this.setState({\n        Loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, Loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        Loading={Loading}\n        handelSumbit={this.handelSumbit}\n        update={this.update}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.7s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\n\nconst Store = React.createContext(null);\n\nexport default Store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Store from \"../../Store\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 70%;\n  margin-bottom: 30px;\n`;\n\nconst Production = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 150px;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n`;\n\nconst ProductionName = styled.div`\n  justify-content: center;\n  font-size: 10px;\n`;\n\nconst Select = styled.div`\n  margin-bottom: 30px;\n  display: grid;\n  width: 36%;\n  grid-template-columns: repeat(3, max-Content);\n  justify-content: space-between;\n`;\n\nconst Company = styled.button`\n  height: 30px;\n  padding: 5px;\n  background-color: #636e72;\n  border-radius: 10px;\n`;\n\nconst Videos = styled.button`\n  height: 30px;\n  padding: 5px;\n  background-color: #636e72;\n  border-radius: 10px;\n`;\n\nconst Genres = styled.button`\n  height: 30px;\n  padding: 5px;\n  background-color: #636e72;\n  border-radius: 10px;\n`;\n\nconst noImageUrl =\n  \"http://directory.beauty-africa.com/assets/media/noimage.png\";\n\nconst DetailPresenter = () => (\n  <Store.Consumer>\n    {(store) =>\n      store.Loading ? (\n        <>\n          <Helmet>\n            <title>loading | nomflix</title>\n          </Helmet>\n          <Loader />\n        </>\n      ) : (\n        <>\n          <Helmet>\n            <title>\n              {store.result.original_title\n                ? `${store.result.original_title} | nomflix`\n                : `${store.result.original_name} | nomflix`}\n            </title>\n          </Helmet>\n\n          <Container>\n            <Backdrop\n              bgImage={`https://image.tmdb.org/t/p/original${store.result.backdrop_path}`}\n            />\n            <Content>\n              <Cover\n                bgImage={\n                  store.result.poster_path\n                    ? `https://image.tmdb.org/t/p/original${store.result.poster_path}`\n                    : noImageUrl\n                }\n              />\n              <Data>\n                <Title>\n                  {store.result.original_title\n                    ? store.result.original_title\n                    : store.result.original_name}\n                </Title>\n                <ItemContainer>\n                  <Item>\n                    {store.result.release_date\n                      ? store.result.release_date.substring(0, 4)\n                      : store.result.first_air_date.substring(0, 4)}\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {store.result.runtime\n                      ? store.result.runtime\n                        ? store.result.runtime\n                        : store.result.episode_run_time[0]\n                      : null}\n                    min\n                  </Item>\n                  <Divider>•</Divider>\n                  <Item>\n                    {store.result.genres &&\n                      store.result.genres.map((genre, index) =>\n                        index === store.result.genres.length - 1\n                          ? genre.name\n                          : `${genre.name} / `\n                      )}\n                  </Item>\n                </ItemContainer>\n                <Overview>{store.result.overview}</Overview>\n                <Select>\n                  <Company\n                    value=\"Companies\"\n                    onClick={(e) => store.changeValue(e.target.value)}>\n                    Production Companies\n                  </Company>\n                  <Videos\n                    value=\"Trailers\"\n                    onClick={(e) => store.changeValue(e.target.value)}>\n                    Trailers\n                  </Videos>\n                  <Genres\n                    value=\"Genres\"\n                    onClick={(e) => store.changeValue(e.target.value)}>\n                    Genres\n                  </Genres>\n                  {console.log(store.value)}\n                </Select>\n                {store.value === \"Companies\" &&\n                store.result.production_companies.length > 0 ? (\n                  <Section title=\"Production Companyies\">\n                    {store.result.production_companies.map((names) => (\n                      <div key={names.id}>\n                        <ProductionName>\n                          {names.name.length > 15\n                            ? `${names.name.substring(0, 15)}...`\n                            : names.name}\n                        </ProductionName>\n                        <Production\n                          bgUrl={\n                            names.logo_path\n                              ? `https://image.tmdb.org/t/p/original${names.logo_path}`\n                              : noImageUrl\n                          }></Production>\n                      </div>\n                    ))}\n                  </Section>\n                ) : null}\n                {store.value === \"Genres\" && store.result.genres.length > 0 ? (\n                  <Section title=\"Genres\">\n                    {store.result.genres.map((key) => (\n                      <ProductionName>{key.name}</ProductionName>\n                    ))}\n                  </Section>\n                ) : null}\n              </Data>\n            </Content>\n          </Container>\n        </>\n      )\n    }\n  </Store.Consumer>\n);\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  Loading: PropTypes.bool\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport Store from \"../../Store\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.changeValue = (value) =>\n      this.setState({\n        value\n      });\n    this.state = {\n      result: null,\n      error: null,\n      Loading: true,\n      isMovie: pathname.includes(\"movie\"),\n      value: \"Companies\",\n      changeValue: this.changeValue\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      const {\n        history: { push }\n      } = this.props;\n      return push(\"/\");\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch (error) {\n      this.setState({ error: \"cant find anything\" });\n    } finally {\n      this.setState({\n        Loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Store.Provider value={this.state}>\n        <DetailPresenter />\n      </Store.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home/index\";\nimport Tv from \"../Routes/TV/index\";\nimport Search from \"../Routes/Search/index\";\nimport Header from \"./Header\";\nimport Detail from \"../Routes/Detail/index\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={Tv} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}